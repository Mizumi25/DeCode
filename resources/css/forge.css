/* @/css/forge.css - Enhanced CSS for Forge Page Components */



.canvas-container {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 400px;
}

/* Enhanced Code syntax highlighting styles */
.code-keyword {
  color: #569cd6;
  font-weight: 600;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-keyword:hover {
  background-color: rgba(86, 156, 214, 0.2);
}

.code-string {
  color: #ce9178;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-string:hover {
  background-color: rgba(206, 145, 120, 0.2);
}

.code-comment {
  color: #6a9955;
  font-style: italic;
}

.code-tag {
  color: #4ec9b0;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-tag:hover {
  background-color: rgba(78, 201, 176, 0.2);
}

.code-attr {
  color: #9cdcfe;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-attr:hover {
  background-color: rgba(156, 220, 254, 0.2);
}

.code-number {
  color: #b5cea8;
}

.code-function {
  color: #dcdcaa;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-function:hover {
  background-color: rgba(220, 220, 170, 0.2);
}

.code-property {
  color: #9cdcfe;
  cursor: help;
  border-radius: 3px;
  padding: 1px 2px;
  margin: -1px -2px;
  transition: background-color 0.2s ease;
}

.code-property:hover {
  background-color: rgba(156, 220, 254, 0.2);
}

.code-value {
  color: #ce9178;
}

.code-selector {
  color: #d7ba7d;
}

/* Tailwind-specific highlighting */
.code-tailwind {
  cursor: help;
  border-radius: 3px;
  padding: 1px 3px;
  margin: -1px -3px;
  transition: all 0.2s ease;
  font-weight: 500;
}

.code-tailwind.layout {
  color: #f59e0b;
}

.code-tailwind.layout:hover {
  background-color: rgba(245, 158, 11, 0.2);
}

.code-tailwind.spacing {
  color: #ec4899;
}

.code-tailwind.spacing:hover {
  background-color: rgba(236, 72, 153, 0.2);
}

.code-tailwind.sizing {
  color: #8b5cf6;
}

.code-tailwind.sizing:hover {
  background-color: rgba(139, 92, 246, 0.2);
}

.code-tailwind.color {
  color: #06b6d4;
}

.code-tailwind.color:hover {
  background-color: rgba(6, 182, 212, 0.2);
}

.code-tailwind.decoration {
  color: #10b981;
}

.code-tailwind.decoration:hover {
  background-color: rgba(16, 185, 129, 0.2);
}

.code-tailwind.effects {
  color: #f97316;
}

.code-tailwind.effects:hover {
  background-color: rgba(249, 115, 22, 0.2);
}

.code-tailwind.interaction {
  color: #ef4444;
}

.code-tailwind.interaction:hover {
  background-color: rgba(239, 68, 68, 0.2);
}

/* Enhanced scrollbar for code editor */
.code-editor::-webkit-scrollbar {
  width: 12px;
}

.code-editor::-webkit-scrollbar-track {
  background: #2d3748;
  border-radius: 6px;
}

.code-editor::-webkit-scrollbar-thumb {
  background: var(--color-primary);
  border-radius: 6px;
  border: 2px solid #2d3748;
}

.code-editor::-webkit-scrollbar-thumb:hover {
  background: var(--color-primary-hover);
}

/* Fixed bottom panel specific styles */
.fixed-code-panel {
  backdrop-filter: blur(20px);
  border-top: 2px solid var(--color-border);
}

/* Resizable handle styles */
.resize-handle {
  background: linear-gradient(to right, transparent, var(--color-primary), transparent);
  opacity: 0.5;
  transition: opacity 0.2s ease;
}

.resize-handle:hover {
  opacity: 1;
}

/* Smooth transitions for all interactive elements */
.group:hover .group-hover\:scale-110 {
  transform: scale(1.1);
}

/* Focus styles using CSS variables */
input:focus, textarea:focus, button:focus {
  box-shadow: 0 0 0 3px rgba(160, 82, 255, 0.1);
  border-color: var(--color-primary) !important;
}

/* Hover effects */
[style*="cursor-pointer"]:hover {
  transform: translateY(-1px);
  transition: var(--transition);
}

/* Selection styles */
::selection {
  background-color: var(--color-primary-soft);
  color: var(--color-primary);
}

/* Professional button styles */
button {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  font-weight: 500;
  letter-spacing: -0.025em;
}

/* Enhanced input styles */
input, textarea, select {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  transition: var(--transition);
}

input:hover, textarea:hover, select:hover {
  border-color: var(--color-primary-hover);
}

/* Professional panel styling with full opacity */
[class*="panel"] {
  backdrop-filter: blur(20px);
  border: 1px solid var(--color-border);
  opacity: 1 !important;
}

/* Ensure sidebar code panel has full opacity */
.panel-content .code-editor {
  opacity: 1 !important;
}

.panel-content .code-editor * {
  opacity: 1 !important;
}

/* Loading states */
.loading {
  position: relative;
  overflow: hidden;
}

.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

/* Toast notification styles */
.toast {
  background: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  backdrop-filter: blur(20px);
}

/* Professional animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.animate-fadeInUp {
  animation: fadeInUp 0.3s ease-out;
}

.animate-fadeInScale {
  animation: fadeInScale 0.2s ease-out;
}

/* Enhanced mobile responsiveness */
@media (max-width: 768px) {
  .tooltip {
    font-size: 11px;
    max-width: 250px;
  }
  
  .code-editor {
    font-size: 12px;
  }
  
  .fixed-code-panel {
    left: 0 !important;
    right: 0 !important;
  }
}

/* Touch-friendly hover states */
@media (hover: none) {
  .code-keyword,
  .code-string,
  .code-tag,
  .code-attr,
  .code-function,
  .code-property,
  .code-tailwind {
    cursor: pointer;
  }
  
  .code-keyword:active,
  .code-string:active,
  .code-tag:active,
  .code-attr:active,
  .code-function:active,
  .code-property:active,
  .code-tailwind:active {
    background-color: rgba(255, 255, 255, 0.1) !important;
  }
}

/* Code formatting improvements */
.code-editor pre {
  tab-size: 2;
  -moz-tab-size: 2;
  -o-tab-size: 2;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/* Better line height for readability */
.code-editor,
.code-editor pre,
.code-editor textarea {
  line-height: 1.6 !important;
}

/* Ensure consistent font sizing */
.code-editor * {
  font-family: Monaco, Menlo, "Ubuntu Mono", "Courier New", monospace !important;
}



/* Add to resources/css/forge.css */

/* Empty canvas state animations */
.empty-canvas-pulse {
  animation: emptyCanvasPulse 3s ease-in-out infinite;
}

@keyframes emptyCanvasPulse {
  0%, 100% { border-color: #d1d5db; }
  50% { border-color: #3b82f6; }
}

/* Section drop zone styles */
.section-drop-zone {
  transition: all 0.2s ease;
}

.section-drop-zone.active {
  border-color: #3b82f6;
  background-color: rgba(59, 130, 246, 0.1);
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

/* Layout element placeholder styles */
.layout-placeholder {
  min-height: 100px;
  border: 2px dashed #e5e7eb;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #6b7280;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
}

.layout-placeholder:hover {
  border-color: #3b82f6;
  background-color: rgba(59, 130, 246, 0.05);
}

/* Page structure hierarchy indicators */
.page-structure-hint {
  border-left: 4px solid #e5e7eb;
  padding-left: 12px;
  margin: 8px 0;
}

.page-structure-hint.section {
  border-left-color: #10b981;
}

.page-structure-hint.component {
  border-left-color: #3b82f6;
}


/* Enhanced layout container styles */
.layout-container {
  min-height: 100px;
  transition: all 0.2s ease;
  position: relative;
}

.layout-container[data-is-layout="true"]:hover {
  outline: 2px dashed rgba(59, 130, 246, 0.3);
  outline-offset: 2px;
}

.layout-container[data-is-layout="true"]:hover::before {
  content: attr(data-component-id);
  position: absolute;
  top: -20px;
  left: 0;
  font-size: 10px;
  background: rgba(59, 130, 246, 0.9);
  color: white;
  padding: 2px 6px;
  border-radius: 3px;
  font-family: monospace;
  z-index: 100;
  pointer-events: none;
}

/* Nested depth indicators */
.layout-container[data-depth="0"] {
  border: 2px solid transparent;
}

.layout-container[data-depth="1"] {
  border-left: 3px solid rgba(139, 92, 246, 0.3);
}

.layout-container[data-depth="2"] {
  border-left: 3px solid rgba(236, 72, 153, 0.3);
}

.layout-container[data-depth="3"] {
  border-left: 3px solid rgba(34, 197, 94, 0.3);
}

/* Touch-friendly drag handle */
@media (hover: none) {
  [class*="drag-handle"] {
    opacity: 1 !important;
    transform: scale(1.2);
  }
}

/* Long press animation */
@keyframes longPressGlow {
  0%, 100% { box-shadow: 0 0 0 0 rgba(160, 82, 255, 0.4); }
  50% { box-shadow: 0 0 0 8px rgba(160, 82, 255, 0); }
}

.long-press-active {
  animation: longPressGlow 1.5s ease-in-out infinite;
}











/* Smooth drag cursor */
.cursor-grabbing * {
  cursor: grabbing !important;
}

[data-component-id]:active {
  cursor: grabbing !important;
}

/* Long press visual feedback */
@keyframes long-press-glow {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(139, 92, 246, 0.7);
  }
  50% {
    box-shadow: 0 0 0 15px rgba(139, 92, 246, 0);
  }
}




/* ============================================
   DRAG REORDER FIX - Prevent text selection
   ============================================ */

/* Prevent text selection during drag on ALL elements */
.layout-container,
[data-component-id] {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important;
  touch-action: none !important;
}

/* Re-enable text selection ONLY in actual text inputs */
input, 
textarea, 
[contenteditable="true"] {
  -webkit-user-select: text !important;
  user-select: text !important;
  touch-action: auto !important;
}

/* Global drag state - applied to body */
body.dragging * {
  user-select: none !important;
  -webkit-user-select: none !important;
  cursor: grabbing !important;
}

body.dragging input,
body.dragging textarea,
body.dragging [contenteditable="true"] {
  pointer-events: none !important;
}

/* Mobile drag handle optimization */
@media (hover: none) and (pointer: coarse) {
  /* Larger touch targets on mobile */
  [class*="drag-handle"],
  .grip-vertical,
  [data-sortable-handle] {
    min-width: 44px !important;
    min-height: 44px !important;
    padding: 8px !important;
  }
  
  .layout-container {
    cursor: grab !important;
  }
  
  .layout-container:active {
    cursor: grabbing !important;
  }
}

/* Visual feedback during drag */
.sortable-ghost {
  opacity: 0.3 !important;
  background: rgba(59, 130, 246, 0.1) !important;
  border: 2px dashed #3b82f6 !important;
}

/* Hide original during drag */
[data-sortable-id].dragging {
  opacity: 0 !important;
  visibility: hidden !important;
}






/* ========== FIXED DRAG & DROP STYLES ========== */

/* Remove these problematic rules entirely:
   - [data-dnd-kit-dragging] { transform: none !important; }
   - body.dragging * { transform: none !important; }
   - Mobile scale override for drag-overlay
*/

/* Enhanced drag styles with CSS variables */
.drag-preview {
  animation: dragBounce 0.3s ease-out;
  backdrop-filter: blur(20px);
  opacity: 0.9 !important;
  transform: rotate(2deg) scale(1.05);
  box-shadow: 0 20px 40px rgba(0,0,0,0.3);
  border: 2px solid var(--color-primary);
}

@keyframes dragBounce {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.1) rotate(2deg); }
  100% { transform: scale(1.05) rotate(2deg); }
}

/* Remove grip handle - make entire element draggable */
[data-component-id] {
  cursor: grab !important;
}

[data-component-id]:active {
  cursor: grabbing !important;
}

/* Hide the specific grip element */
.grip-vertical,
[class*="drag-handle"],
[data-sortable-handle] {
  display: none !important;
}

/* Enhanced ghost styling - FIXED: Remove mobile scale override */
[data-dnd-kit-drag-overlay] {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  z-index: 9999 !important;
  pointer-events: none !important;
  transform-origin: center center !important;
  opacity: 0.95 !important;
  filter: brightness(1.1) saturate(1.2);
  backdrop-filter: blur(10px);
}

/* Ensure the dragged element disappears from canvas - FIXED: Remove transform override */
[data-dnd-kit-dragging] {
  opacity: 0.3 !important;
  visibility: visible !important;
  transition: opacity 0.1s ease !important;
  /* REMOVED: transform: none !important; */
}

/* Better visual feedback during drag */
[data-dnd-kit-drag-overlay] > * {
  animation: liftUp 0.2s ease-out !important;
  box-shadow: 0 25px 50px rgba(0,0,0,0.4) !important;
  border: 2px solid var(--color-primary) !important;
  border-radius: 8px !important;
  overflow: hidden !important;
}

@keyframes liftUp {
  0% {
    transform: scale(0.95) rotate(-1deg);
    opacity: 0.8;
  }
  100% {
    transform: scale(1.05) rotate(2deg);
    opacity: 1;
  }
}

/* Remove green line - rely on snap lines component */
.drag-over {
  border: none !important;
}

/* Enhanced drop zone styling */
.layout-container[data-is-layout="true"]:hover {
  outline: 2px dashed rgba(59, 130, 246, 0.1);
  outline-offset: 2px;
}

.layout-container[data-is-layout="true"].drop-target {
  outline: 3px dashed rgba(59, 130, 246, 0.8);
  outline-offset: 1px;
  background-color: rgba(59, 130, 246, 0.05);
  transition: all 0.2s ease;
}

/* Snap lines styling - subtle and only on hover */
.snap-line {
  opacity: 0;
  transition: opacity 0.2s ease;
}

.drag-preview:hover ~ .snap-line,
.layout-container:hover .snap-line {
  opacity: 0.7;
}

/* Enhanced drop zone animations */
.drop-zone-active {
  animation: dropZonePulse 1.5s ease-in-out infinite;
  border-color: var(--color-primary) !important;
  background-color: rgba(59, 130, 246, 0.1) !important;
}

@keyframes dropZonePulse {
  0%, 100% { 
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
  }
  50% { 
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
}


body.dragging [data-component-id]:not([data-dnd-kit-dragging]) {
  opacity: 0.6;
  filter: grayscale(0.3);
  transition: all 0.3s ease;
}

/* Mobile-specific drag improvements - FIXED: Remove scale override */
@media (max-width: 768px) {
  /* Larger touch targets */
  [data-component-id] {
    min-height: 44px;
    min-width: 44px;
  }
 
}

.layout-container {
  transition: opacity 0.15s ease !important;
}



/* ========== CRITICAL DRAG POSITIONING FIXES ========== */


/* Remove any potential transform interference */
body.dragging [data-dnd-kit-drag-overlay] {
  transform: none !important;
}



/* TEMPORARY DEBUG - Add to forge.css */
[style*="SPACING_COLOR"] {
  background-color: red !important;
  border: 2px solid red !important;
  opacity: 1 !important;
  z-index: 9999 !important;
  display: block !important;
  visibility: visible !important;
}

/* Make sure the selection overlay container is visible */
.selection-overlay {
  opacity: 1 !important;
  visibility: visible !important;
  pointer-events: none !important;
}


/* ========== PANEL CLICK FIXES ========== */

/* Ensure panels don't extend beyond their bounds */
.panel-container,
[class*="dock-"] {
  pointer-events: none !important; /* Container doesn't block clicks */
  overflow: visible !important;
}

/* Only the visible panel content should be interactive */
.panel-container > *,
.panel-container .rounded-lg,
.panel-container .border {
  pointer-events: auto !important; /* Content is interactive */
  overflow: hidden !important; /* Prevent overflow */
}

/* Make sure the actual panel boundaries are constrained */
.dock-left,
.dock-right {
  width: var(--panel-width, 320px) !important;
  max-width: var(--panel-max-width, 400px) !important;
  min-width: var(--panel-min-width, 280px) !important;
}

/* Canvas area should always be clickable */
.canvas-area,
[class*="canvas"],
[data-component-id] {
  pointer-events: auto !important;
  z-index: 10 !important; /* Below panels but above other elements */
}

/* When panels are closed, ensure they don't block */
.panel-container:not(.is-open) {
  display: none !important;
}

/* Critical: Ensure the main content area is always accessible */
.main-content-area {
  pointer-events: auto !important;
  z-index: 1 !important;
  position: relative;
}

/* Panel z-index hierarchy */
.dock-left,
.dock-right {
  z-index: 20 !important; /* Panels above canvas */
}

.panel-container {
  z-index: 21 !important; /* Individual panels */
}

/* Make sure drag handles don't extend */
[class*="grip"],
[class*="drag-handle"] {
  pointer-events: auto !important;
  touch-action: manipulation !important;
}

/* Mobile specific fixes */
@media (max-width: 768px) {
  .dock-left,
  .dock-right {
    width: 280px !important;
    max-width: 300px !important;
  }
  
  .panel-container {
    max-height: 80vh !important;
    overflow-y: auto !important;
  }
}

/* Debug borders to see panel boundaries (remove after testing) */
.dock-left {
  border: 1px solid rgba(255, 0, 0, 0.3) !important;
}

.dock-right {
  border: 1px solid rgba(0, 255, 0, 0.3) !important;
}

.panel-container {
  border: 1px solid rgba(0, 0, 255, 0.3) !important;
}



/* 🔥 CRITICAL DRAG FIXES FOR NON-LAYOUT COMPONENTS - ADD THIS BLOCK */

/* Make ALL components draggable by default */
[data-component-id] {
  cursor: grab !important;
  position: relative !important;
}

[data-component-id]:active {
  cursor: grabbing !important;
}

/* Non-layout components should have visible drag area */
[data-is-layout="false"] {
  position: relative !important;
}

/* Ensure drag overlay is always accessible */
[data-is-layout="false"] .drag-overlay {
  opacity: 0.1 !important;
  background-color: rgba(59, 130, 246, 0.1) !important;
  border-radius: 4px !important;
  transition: all 0.2s ease !important;
}

[data-is-layout="false"]:hover .drag-overlay {
  opacity: 0.3 !important;
  background-color: rgba(59, 130, 246, 0.2) !important;
}

/* Prevent content from blocking drag */
[data-is-layout="false"] .component-content {
  pointer-events: none !important;
}

/* But allow interactions with form elements */
[data-is-layout="false"] input,
[data-is-layout="false"] button,
[data-is-layout="false"] textarea,
[data-is-layout="false"] select {
  pointer-events: auto !important;
}

/* Enhanced drag states */
body.dragging [data-component-id] {
  cursor: grabbing !important;
}

/* Mobile touch improvements */
@media (max-width: 768px) {
  [data-component-id] {
    min-height: 44px !important;
    min-width: 44px !important;
  }
  
  [data-is-layout="false"] .drag-overlay {
    opacity: 0.2 !important;
  }
}

/* Remove any text selection during drag */
[data-component-id] {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important;
}



/* 🔥 NESTING VISUAL FEEDBACK */

/* Layout container drop zone styling */
.layout-container.drop-target {
  outline: 3px dashed rgba(59, 130, 246, 0.8) !important;
  outline-offset: 2px !important;
  background-color: rgba(59, 130, 246, 0.1) !important;
  transition: all 0.2s ease !important;
}

/* Visual feedback for drag over layout */
.layout-container.drag-over-layout {
  animation: pulse-glow 1.5s ease-in-out infinite !important;
  border: 2px solid rgba(59, 130, 246, 0.6) !important;
}

/* Add to your existing styles */
.layout-container.drop-zone-active {
  outline: 3px dashed #3b82f6 !important;
  outline-offset: 2px !important;
  background-color: rgba(59, 130, 246, 0.05) !important;
  transition: all 0.2s ease !important;
}

.layout-container.drop-zone-hover {
  outline: 3px solid #10b981 !important;
  background-color: rgba(16, 185, 129, 0.1) !important;
  animation: pulse-glow 1.5s ease-in-out infinite !important;
}

@keyframes pulse-glow {
  0%, 100% { 
    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.4);
  }
  50% { 
    box-shadow: 0 0 0 8px rgba(16, 185, 129, 0);
  }
}

/* Prevent reordering visual feedback when over layout containers */
[data-is-layout="true"] .sortable-ghost {
  display: none !important;
}




/* 🔥 CRITICAL: Layout container drop zone styling */
.layout-container[data-is-layout="true"] {
  position: relative;
  min-height: 100px;
  transition: all 0.2s ease;
}

.layout-container[data-is-layout="true"].drag-over-layout {
  outline: 3px dashed #10b981 !important;
  outline-offset: 4px !important;
  background-color: rgba(16, 185, 129, 0.05) !important;
  animation: pulse-glow 1.5s ease-in-out infinite !important;
}

.layout-container[data-is-layout="true"].drag-over-layout::before {
  content: "Drop here to nest inside";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(16, 185, 129, 0.9);
  color: white;
  padding: 8px 16px;
  border-radius: 8px;
  font-size: 12px;
  font-weight: 600;
  pointer-events: none;
  z-index: 1000;
  white-space: nowrap;
}





/* ADD to forge.css - Ensure selected elements have proper cursor */
[data-component-id].selected {
  cursor: grab !important;
}

[data-component-id].selected:active {
  cursor: grabbing !important;
}

/* Make sure selection doesn't interfere with drag */
.selection-overlay {
  pointer-events: none !important;
}

/* Ensure drag handles are above selection */
[class*="drag-handle"] {
  z-index: 10000 !important;
}